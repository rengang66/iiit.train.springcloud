[ INFO ] [2019-04-24 11:08:53] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@222545dc: startup date [Wed Apr 24 11:08:53 CST 2019]; root of context hierarchy
[ INFO ] [2019-04-24 11:08:54] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2019-04-24 11:08:54] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-04-24 11:08:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$637511c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-04-24 11:08:55] com.iiit.train.springcloud.zuul.zuulserver.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2019-04-24 11:08:55] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@331acdad: startup date [Wed Apr 24 11:08:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@222545dc
[ INFO ] [2019-04-24 11:08:56] org.springframework.beans.factory.support.DefaultListableBeanFactory [828] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
[ INFO ] [2019-04-24 11:08:57] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=2e74b8db-c953-342a-bd92-853c2b51a556
[ INFO ] [2019-04-24 11:08:57] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-04-24 11:08:58] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$7987b508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-04-24 11:08:58] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$637511c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-04-24 11:08:59] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8280 (http)
[ INFO ] [2019-04-24 11:08:59] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2019-04-24 11:08:59] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2019-04-24 11:08:59] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-04-24 11:08:59] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 3860 ms
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'zuulServlet' to [/zuul/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-04-24 11:09:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ WARN ] [2019-04-24 11:09:01] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-04-24 11:09:01] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-04-24 11:09:01] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1fb2d5e
[ WARN ] [2019-04-24 11:09:02] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-04-24 11:09:02] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@331acdad: startup date [Wed Apr 24 11:08:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@222545dc
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-04-24 11:09:03] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/routes || /routes.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.netflix.zuul.RoutesMvcEndpoint.reset()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/routes || /routes.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:04] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-04-24 11:09:05] org.springframework.cloud.netflix.zuul.ZuulFilterInitializer [64] - Starting filter initializer
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'zuulEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'zuulMvcEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'zuulMvcEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulMvcEndpoint,type=RoutesMvcEndpoint]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'zuulEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulEndpoint,type=RoutesEndpoint]
[ WARN ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [849] - Bean with key 'zuulEndpoint' has been registered as an MBean but has no exposed attributes or operations
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=331acdad,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-04-24 11:09:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-04-24 11:09:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2019-04-24 11:09:06] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2019-04-24 11:09:06] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2019-04-24 11:09:06] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1556075347491 with initial instances count: 3
[ INFO ] [2019-04-24 11:09:07] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application ZUULSVR with eureka with status UP
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1556075347626, current=UP, previous=STARTING]
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_ZUULSVR/reng-notes:ZUULSVR:8280: registering service...
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-04-24 11:09:07] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_ZUULSVR/reng-notes:ZUULSVR:8280 - registration status: 204
[ INFO ] [2019-04-24 11:09:07] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-04-24 11:09:07] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2019-04-24 11:09:07] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2019-04-24 11:09:07] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8280"]
[ INFO ] [2019-04-24 11:09:07] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8280]
[ INFO ] [2019-04-24 11:09:07] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2019-04-24 11:09:08] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8280 (http)
[ INFO ] [2019-04-24 11:09:08] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8280
[ INFO ] [2019-04-24 11:09:08] com.iiit.train.springcloud.zuul.zuulserver.Application [57] - Started Application in 15.111 seconds (JVM running for 16.224)
[ INFO ] [2019-04-24 11:09:49] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-04-24 11:09:49] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-04-24 11:09:49] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
[ INFO ] [2019-04-24 11:09:49] org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping [362] - Mapped URL path [/productservice/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[ INFO ] [2019-04-24 11:09:49] org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping [362] - Mapped URL path [/servicediscovery/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[ INFO ] [2019-04-24 11:09:49] org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping [362] - Mapped URL path [/userservice/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[ INFO ] [2019-04-24 11:09:49] org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping [362] - Mapped URL path [/zuulsvr/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[ INFO ] [2019-04-24 11:09:49] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3eafcb14: startup date [Wed Apr 24 11:09:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@331acdad
[ INFO ] [2019-04-24 11:09:49] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-04-24 11:09:50] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: userservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-04-24 11:09:50] com.netflix.util.concurrent.ShutdownEnabledTimer [58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-userservice
[ INFO ] [2019-04-24 11:09:50] com.netflix.loadbalancer.BaseLoadBalancer [192] - Client: userservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=userservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-04-24 11:09:50] com.netflix.loadbalancer.DynamicServerListLoadBalancer [214] - Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-04-24 11:09:50] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: userservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-04-24 11:09:50] com.netflix.loadbalancer.DynamicServerListLoadBalancer [150] - DynamicServerListLoadBalancer for client userservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=userservice,current list of Servers=[192.168.10.119:2100],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.10.119:2100;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@31a1b565
[ INFO ] [2019-04-24 11:09:51] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: userservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
